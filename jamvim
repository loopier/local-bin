#!/bin/bash

# Setup to play live-coding with tidalvim.
#
# It's a customized version of 
# https://github.com/tidalcycles/vim-tidal/blob/master/bin/tidalvim
# 'tidalvim' is usually installed in /usr/local/bin/tidalvim
# This scripts overwrites that script -- or rather ignores it

set -euf -o pipefail

VIM=${VIM:-"nvim"}
TMUX=${TMUX:-"tmux"}
FILE=${FILE:-"one.scd jam-$(date +%F).tidal"}

if [ "$#" -eq 0 ]; then
    DIR=$(pwd)
else
    DIR=$1
fi

cd $DIR

if [ -f "tidalboot.scd" ]; then
    echo "tidalboot.scd exists"
else
    printf "tidalboot.scd does not exist.\nCreating tidalboot.\n"
    printf "Loopier.tidal;\nLoopier.tidalExtra;\n" >> tidalboot.scd
fi

# list files in one line
FILE=$(ls -1 | tr '\n' ' ')
SESSION=${SESSION:-"tidal"}

TIDAL_BOOT_PATH=${TIDAL_BOOT_PATH:-""}
GHCI=${GHCI:-""}

# args=${@:-$FILE}
args=${FILE}

# Check if tmux session "tidal" is running, attach only
# else, create new session, split windows and run processes
# Boot Supercollider interpreter in NeoVim
$TMUX -2 attach-session -t $SESSION || $TMUX -2 \
  new-session -s $SESSION   \; \
  split-window -v -p 15 -t $SESSION   \; \
  send-keys -t 0 "$VIM $args" C-m   \; \
  send-keys -t 0 ":b *.scd" C-m   \; \
  send-keys -t 0 ":SCNvimStart" C-m   \; \
  send-keys -t 1 "TIDAL_BOOT_PATH=$TIDAL_BOOT_PATH GHCI=$GHCI tidal" C-m   \; \
  select-pane -t 0

